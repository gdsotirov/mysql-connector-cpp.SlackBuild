#!/bin/sh
#
# Slackware build script for MySQL Connector/C++
# Copyright (C) 2010-2014 Georgi D. Sotirov <gdsotirov@dir.bg>
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
#
# Visit SlackPack at http://sotirov-bg.net/slackpack/
#
# $Id: mysql-connector-c++.SlackBuild,v 1.7 2014/09/06 13:56:19 gsotirov Exp $
#

. ../../slack-package.conf

NAME=mysql-connector-c++
VERSION=1.1.4
BUILD=${BUILD:-1}

TMP=${TMP:-/tmp}
CWD=${CWD:-`pwd`}

if [ ! -e $TMP ]; then
  mkdir -p $TMP # location to build the source
fi

SRC=$TMP/$NAME-$VERSION
if [ -e $SRC -a -d $SRC ]; then
  echo "Source directory '$SRC' already exists! Plaese, move it or remove it."
  exit 1
fi

PKG=$TMP/package-$NAME
if [ -e $PKG -a -d $PKG ]; then
  echo "Package creation directory '$PKG' already exists! Please, move it or remove it."
  exit 2
fi
mkdir -p $PKG

# Extract the source
cd $TMP
tar -xvf $CWD/$NAME-$VERSION.tar.gz || exit 3
cd $SRC
fix_source

# Apply patches
#patch -p1 -b -z.orig < $CWD/$NAME-$VERSION.diff

# Configure custom build
cmake . -LA \
      -DCMAKE_BUILD_TYPE=Release \
      -DCMAKE_CXX_COMPILER=/usr/bin/g++ \
      -DCMAKE_CXX_FLAGS="$SLKCFLAGS" \
      -DMYSQL_CXXFLAGS="$MYSQL_CXXFLAGS -fexceptions" \
      -DCMAKE_C_COMPILER=/usr/bin/gcc \
      -DCMAKE_C_FLAGS="$SLKCFLAGS" \
      -DCMAKE_INSTALL_PREFIX=/usr \
      -DMYSQLCLIENT_STATIC_BINDING=1 \
      -DMYSQLCPPCONN_BUILD_EXAMPLES=0 || exit 4

# Build and install
make -j4 VERBOSE=1 || exit 5
make install DESTDIR=$PKG || exit 6

# Rename library directory, as no other way to do this currently
if [ "$ARCH" = "x86_64" ]; then
  ( cd  $PKG/usr; mv lib lib${LIBDIRSUFFIX} )
fi

# Prepare package
bin_perms $PKG
( cd $PKG; strip_bin; strip_lib; strip_static )
DOCFILES="$DOCFILES ANNOUNCEMENT examples"
( cd $PKG/usr
  rm README ANNOUNCEMENT COPYING )
create_docs $PKG $NAME-$VERSION

install -m 755 -d $PKG/install
install -m 644 $CWD/slack-desc     $PKG/install
install -m 644 $CWD/slack-required $PKG/install

SBDIR=$PKG/usr/src/slackbuilds/$NAME-$VERSION
install -m 755 -d $SBDIR
install -m 644 $CWD/slack-desc          $SBDIR/slack-desc
install -m 644 $CWD/slack-required      $SBDIR/slack-required
#install -m 644 $CWD/$NAME-$VERSION.diff $SBDIR/$NAME-$VERSION.diff
install -m 644 $CWD/$NAME.SlackBuild    $SBDIR/$NAME.SlackBuild

# Build package
cd $PKG
PKGNAME=$NAME-$VERSION-$ARCH-$BUILD$MYIN
makepkg -l y -c n -p $PKG_DIR/$PKGNAME.txz
cd $PKG_DIR
md5sum $PKGNAME.txz > $PKGNAME.txz.md5
cat $PKG/install/slack-desc > $PKG_DIR/$PKGNAME.txt

# Clean up (optionally)
if [ "$1" == "--cleanup" ]; then
  rm -rf $SRC
  rm -rf $PKG
fi

